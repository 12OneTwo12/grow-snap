name: jacoco-rule
on:
  pull_request:
    branches: [ main, dev ]

permissions:
  pull-requests: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x grow-snap-backend/gradlew

      - name: Run tests with Gradle
        run: cd grow-snap-backend && ./gradlew test

      - name: Verify Jacoco Test Reports
        run: |
          echo "Checking grow-snap Jacoco Test Report:"
          if [ -f grow-snap-backend/build/reports/jacoco/test/jacocoTestReport.xml ]; then
            echo "grow-snap Jacoco Test Report exists"
            ls -l grow-snap-backend/build/reports/jacoco/test/
          else
            echo "grow-snap Jacoco Test Report does not exist"
            exit 1
          fi
      - name: Store error reports
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/
            **/build/test-results/
      - name: Upload Jacoco coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: '**/build/reports/jacoco'

      - name: Jacoco Report to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: |
            grow-snap-backend/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 50
          title: Code Coverage Report
          update-comment: true

      - name: Check coverage and fail if below threshold
        run: |
          overall=$(echo "${{ steps.jacoco.outputs.coverage-overall }}" | cut -d'.' -f1)
          changed=$(echo "${{ steps.jacoco.outputs.coverage-changed-files }}" | cut -d'.' -f1)
          
          if [ -z "$overall" ] || [ -z "$changed" ]; then
            echo "Failed to get coverage information"
            exit 1
          fi
#          테스트 커버리지 요구 퍼센트 (주석 풀면 동작)
#          if [ $overall -lt 50 ] || [ $changed -lt 50 ]; then
#            echo "Coverage is below the required threshold."
#            echo "Overall coverage: $overall%, Changed files coverage: $changed%"
#            exit 1
#          fi